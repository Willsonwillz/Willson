<resources>
    <string name="app_name">Willson</string>

    <string name="syntax1">An activity represents a single screen with a user interface. For example, an email application
might have one activity that shows a list of new emails, another activity to compose an email,
and one for reading emails. If an application has more than one activity, then one of them
should be marked as the activity that is presented when the application is launched.</string>
    <string name="syntax111">An activity is implemented as a subclass of Activity class as follows:</string>
    <string name="syntax11"> public class MainActivity extends Activity  </string>


    <string name="syntax2">A service is a component that runs in the background to perform long-running operations. For
example, a service might play music in the background while the user is in a different
application, or it might fetch data over the network without blocking user interaction with an
activity.</string>
    <string name="syntax222">A service is implemented as a subclass of Service class as follows:</string>
    <string name="syntax22">public class MyService extends Service</string>


    <string name="syntax3">Broadcast Receivers simply respond to broadcast messages from other applications or from
the system. For example, applications can also initiate broadcasts to let other applications
know that some data has been downloaded to the device and is available for them to use, so
this is broadcast receiver who will intercept this communication and will initiate appropriate
action.</string>
    <string name="syntax333">A broadcast receiver is implemented as a subclass of BroadcastReceiver class and each
message is broadcasted as an Intent object.</string>
    <string name="syntax33"> public class MyReceiver extends BroadcastReceiver</string>

    <string name="syntax4">A content provider component supplies data from one application to others on request. Such
requests are handled by the methods of the ContentResolver class. The data may be stored
in the file system, the database or somewhere else entirely.</string>
    <string name="syntax444">A content provider is implemented as a subclass of ContentProvider class and must
implement a standard set of APIs that enable other applications to perform transactions.</string>
    <string name="syntax44"> public class MyContentProvider extends ContentProvider</string>

    <string name="syntax5">There are additional components which will be used in the construction of above mentioned
entities, their logic, and wiring between them. These components are:</string>

    <string name="syntax51">1. Fragments: Represent a behavior or a portion of user interface in an Activity.</string>
    <string name="syntax52">2. Views: UI elements that are drawn onscreen including buttons, lists
forms etc.</string>
    <string name="syntax53">3. Layouts: View hierarchies that control screen format and appearance of the
views.</string>
    <string name="syntax54">4. Intents: Messages wiring components together. </string>
    <string name="syntax55">5. Resources: External elements, such as strings, constants and drawable
        pictures.</string>
    <string name="syntax56">6. Manifest: Configuration file for the application. </string>
</resources>
